---------
AVIONICS:
---------
In the avionics portion of the build, we are to create the "brain" of the rover. Basically, the rover runs off of a 
controller called a rasberry pi. This device is not just a microcontroller, but a microcomputer. This system can be 
utilized for thousands of tasks. In our case, the rasberry pi will be utilized to pair with a navio2, which will then 
be used to utilize the proportional, integral, and derivative system, or PID. 

Through the PID, we will be able to create "waypoints" for the rover so the rasberry pi will navigate and drive the rover 
vs a user having to manually control the rover. An exmaple of this can be seen in the FANUC robots used for industrial purposes.
This is the reassoning behind the precise sanding described in the "HARDWARE" file. Since the rover is being driven via PID, 
a manual driver will not be able to correct the errors caused by friction. 

According to the PID controller, the rover is taking the shortest route to the designated "way point". However, the PID 
controller does not read friction, so the friction should be filed down as mentioned in the "HARDWARE" portion. Once all 
friction is taken care of, then the PID tuning will take place. 

PID tuning basically communicates to the navio2 how the rover should approach the set waypoints. It is up to the user whether
the rover will approach the waypoints as a FINE movement, or a CONTINUOUS movement. The difference between these two movements 
has to do with how closely the two rover gets to the points. 

With a FINE movement, the rover will simply go to the designated point, stop, then turn to the next point. When utilizing a 
continuous movement, the the robot will approach the point as close as it can without stopping the movement of the rover. 
Basically, setting a radius from the set waypoint. Our approach was utilizing a FINE like movement to achieve a more accurate
route. We decided to sacrifice a few seconds of time to save the accuracy of the run.
